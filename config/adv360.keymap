/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */
/* THIS FILE WAS GENERATED!
 *
 * This file was generated automatically. You may or may not want to
 * edit it directly.
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/backlight.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/rgb.h>

&mt { tapping-term-ms = <150>; };

/ {
    behaviors {
        #include "macros.dtsi"
    #include "version.dtsi"

        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <250>;
            quick_tap_ms = <175>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;

            hold-trigger-on-release;
        };

        td: td {
            compatible = "zmk,behavior-tap-dance";
            label = "TD";
            #binding-cells = <0>;
            bindings = <&kp A>, <&kp A>;

            tapping-term-ms = <200>;
        };
    };

    macros {
        Change_Language: Change_Language {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LC(LEFT_SHIFT)>;
            label = "CHANGE_LANGUAGE";
        };
    };

    combos {
        compatible = "zmk,combos";

        AlwaysOnTop {
            bindings = <&kp LG(LC(T))>;
            key-positions = <32 31>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp EQUAL  &hm F2 N1    &kp N2                       &hm F4 N3    &kp N4       &kp N5           &tog 1           &mo 3          &kp N6         &kp N7     &kp N8         &kp N9     &kp N0     &hm F12 MINUS
&kp TAB    &kp Q        &kp W                        &kp E        &kp R        &hm LG(LC(T)) T  &kp KP_N1        &kp KP_N3      &kp Y          &kp U      &kp I          &kp O      &kp P      &kp LBKT
&kp ESC    &hm RC(A) A  &hm RC(S) S                  &hm LC(H) D  &hm LC(F) F  &kp G            &kp KP_NUMBER_2  &mt LCTRL ESC  &mt LALT LWIN                            &kp RWIN   &kp RCTRL  &kp KP_N4      &kp H     &kp J  &kp K      &hm LC(L) L  &kp SEMI  &kp SQT
&kp LSHFT  &hm LC(Z) Z  &hm LC(X) X                  &hm LC(C) C  &hm LC(V) V  &kp B            &none            &none          &kp HOME       &none      &none          &kp PG_UP  &none      &none          &kp N     &kp M  &kp COMMA  &kp DOT      &kp FSLH  &kp RSHFT
&mo 2      &kp GRAVE    &mt CAPSLOCK LC(LEFT_SHIFT)  &kp LEFT     &kp RIGHT    &kp SPACE        &kp DEL          &kp END        &kp PG_DN      &kp ENTER  &kp BACKSPACE  &kp UP     &kp DOWN   &kp BSLH       &kp RBKT  &mo 2
            >;
        };

        layer_keypad {
            bindings = <
&kp EQUAL  &kp N1     &kp N2       &kp N3       &kp N4       &kp N5    &trans   &mo 3    &kp N6     &kp KP_NUM  &kp KP_DIVIDE  &kp KP_MULTIPLY  &kp KP_MINUS  &mt F12 MINUS
&kp TAB    &kp Q      &kp W        &kp E        &kp R        &kp T     &kp F13  &trans   &kp Y      &kp KP_N7   &kp KP_N8      &kp KP_N9        &kp KP_PLUS   &kp BSLH
&kp ESC    &trans     &kp S        &kp D        &hm LC(F) F  &kp G     &kp F14  &trans   &trans                                &trans           &trans        &trans         &kp H     &kp KP_N4  &kp KP_N5  &kp KP_N6  &kp KP_PLUS   &kp SQT
&kp LSHFT  &kp Z      &hm LC(X) X  &hm RC(C) C  &hm RC(V) V  &kp B     &none    &none    &kp HOME   &none       &none          &kp PG_UP        &none         &none          &kp N     &kp KP_N1  &kp KP_N2  &kp KP_N3  &kp KP_ENTER  &kp RSHFT
&mo 2      &kp GRAVE  &kp CAPS     &kp LEFT     &kp RIGHT    &kp BSPC  &kp DEL  &kp END  &kp PG_DN  &kp ENTER   &kp KP_N0      &kp UP           &kp DOWN      &kp KP_DOT     &kp RBKT  &mo 2
            >;
        };

        layer_fn {
            bindings = <
&kp F1  &kp F2      &kp F3            &kp F4      &kp F5             &kp F6        &tog 1  &mo 3   &kp F7  &kp F8  &kp F9  &kp F10  &kp F11  &kp F12
&trans  &kp C_PREV  &kp C_PLAY_PAUSE  &kp C_NEXT  &kp C_VOLUME_DOWN  &kp C_VOL_UP  &none   &none   &trans  &trans  &trans  &trans   &trans   &trans
&trans  &trans      &trans            &trans      &trans             &trans        &none   &mo 4   &trans                  &trans   &trans   &none    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans      &trans            &trans      &trans             &trans        &none   &none   &trans  &none   &none   &trans   &none    &none    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans      &trans            &trans      &trans             &trans        &trans  &trans  &trans  &trans  &trans  &trans   &trans   &trans   &trans  &trans
            >;
        };

        layer_mod {
            bindings = <
&none  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4     &none                   &trans       &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2     &bt BT_SEL 3  &bt BT_SEL 4  &none
&none  &none         &none         &none         &none         &none            &bootloader             &bootloader  &none         &none         &none            &none         &none         &none
&none  &none         &none         &none         &none         &none            &rgb_ug RGB_MEFS_CMD 5  &bt BT_CLR   &none                                        &bt BT_CLR    &bt BT_CLR    &rgb_ug RGB_MEFS_CMD 5  &none  &none  &none  &none  &none  &none
&none  &none         &none         &hm LC(C) C   &none         &none            &none                   &none        &none         &none         &none            &none         &none         &none                   &none  &none  &none  &none  &none  &none
&none  &none         &none         &bl BL_INC    &bl BL_DEC    &rgb_ug RGB_TOG  &bl BL_TOG              &none        &none         &bl BL_TOG    &rgb_ug RGB_TOG  &bl BL_INC    &bl BL_DEC    &none                   &none  &none
            >;
        };

        layer_Test_Layer__4 {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans       &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans       &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &bootloader  &trans  &trans  &trans                  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans       &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans       &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
            >;
        };
    };
};
